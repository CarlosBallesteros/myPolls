/*TRANSFORMS*/
div {
  -webkit-transform: scale(1.5);
     -moz-transform: scale(1.5);
       -o-transform: scale(1.5);
          transform: scale(1.5);

  transform: rotate(20deg);
  transform: rotateX(20deg);
  transform: rotateY(20deg);
  transform: rotateZ(20deg);

  transform: scale(.75);
  transform: scaleX(.5);
  transform: scaleY(1.15);
  transform: scaleZ(1.15);

  transform: translate(-10px, 25%);
  transform: translateX(-10px);
  transform: translateY(25%);
  transform: translateZ(25%);

  transform: skew(5deg, -20deg);
  transform: skewX(5deg);
  transform: skewY(-20deg);

  transform: rotate(25deg) translate(-10px, 25%);

  transform-origin: 0 0;
  transform-origin: 100% 100%;
  transform-origin: top left;
  transform-origin: 20px 50px;

  perspective: 200px;
  transform: rotateX(45deg);

  transform: perspective(200px) rotateX(45deg);
  transform: perspective(200px) rotateX(45deg) rotateY(45deg) rotateZ(45deg);

  perspective-origin: 0 0;
  perspective-origin: 75% 75%;
  perspective-origin: 20px 40px;

  transform-style: preserve-3d, flat;


  backface-visibility: hidden;
}

/*TRANSITIONS*/
div {
  -webkit-transition-property: background;
     -moz-transition-property: background;
       -o-transition-property: background;
          transition-property: background;

  transition-property: background, border-radius;
  transition-duration: .2s, 1s;
  transition-timing-function: linear, ease-in, ease-out, ease-in-out;
  transition-delay: 0s, 1s;

  transition: background .2s linear, border-radius 1s ease-in 1s;
}

/*ANIMATIONS*/
@-moz-keyframes
@-o-keyframes
@-webkit-keyframes
@keyframes animationName {
  0% {
    left: 0;
    top: 0;
  }
  50% {
    left: 244px;
    top: 100px;
  }
  100% {
    left: 488px;
    top: 0;
  }
}

div {
  animation-name: animationName;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-delay: .5s;
  animation-iteration-count: infinite;
  animation-direction: normal, reverse, alternate, alternate-reverse;
  animation-play-state: running, paused;
  animation-fill-mode: none, forwards, backwards, both;

  animation: animationName 2s ease-in-out .5s infinite alternate;
}

/*WEIRD NOTIFICATIONS*/
.alert-box {
  color:#555;
  border-radius:10px;
  font-family:Tahoma,Geneva,Arial,sans-serif;font-size:11px;
  padding:10px 36px;
  margin:10px;
}
.alert-box span {
  font-weight:bold;
  text-transform:uppercase;
}
.error {
  background:#ffecec url('../images/error.png') no-repeat 10px 50%;
  border:1px solid #f5aca6;
}
.success {
  background:#e9ffd9 url('../images/success.png') no-repeat 10px 50%;
  border:1px solid #a6ca8a;
}
.warning {
  background:#fff8c4 url('../images/warning.png') no-repeat 10px 50%;
  border:1px solid #f2c779;
}
.notice {
  background:#e3f7fc url('../images/notice.png') no-repeat 10px 50%;
  border:1px solid #8ed9f6;
}

/*MEDIA QUERIES*/
@media all and (max-width: 1024px) {...}
@media not screen and (color) {...}
@media only screen and (orientation: portrait) {...}
@media all and (min-device-aspect-ratio: 16/9) {...}

/*FLEX-BOX*/
.container {
  display: flex; /* or inline-flex */
}

.container {
  flex-direction: row | row-reverse | column | column-reverse;
}

.container{
  flex-wrap: nowrap | wrap | wrap-reverse;
}

flex-flow: <‘flex-direction’> || <‘flex-wrap’>

.container {
  justify-content: flex-start | flex-end | center | space-between | space-around;
}

.container {
  align-items: flex-start | flex-end | center | baseline | stretch;
}

.container {
  align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}

.item {
  order: <integer>;
}

.item {
  flex-grow: <number>; /* default 0 */
}

.item {
  flex-shrink: <number>; /* default 1 */
}

.item {
  flex-basis: <length> | auto; /* default auto */
}

.item {
  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
}

.item {
  align-self: auto | flex-start | flex-end | center | baseline | stretch;
}

/*SELECTORS*/
.parent .child
.parent > .directChild
.sibling ~ .otherSibling
.sibling + .adjacentSibling7

.tag[attribute]
.tag[attribute="exact"]
.tag[attribute*="contains"]
.tag[attribute^="begins"]
.tag[attribute$="ends"]
.tag[attribute~="spaced"]
.tag[attribute|="hyphenated"]

.link:link
.link:hover
.link:focus
.link:active
.link:visited
.input:enabled
.input:disabled
.input:checked
.input:indeterminate

.tag:first-child
.tag:last-child
.tag:only-child
.tag:nth-child(3n+2)
.tag:nth-last-child(-n+3)

.tag:first-of-type
.tag:last-of-type
.tag:only-of-type
.tag:nth-of-type(n)
.tag:nth-last-of-type(n)

.tag:empty
div:not(.tag)

.tag:first-letter
.tag:first-line

.tag::selection

.tag:before
.tag:after

/*SASS*/
.parent
  color: blue;
  &:hover
    color: red;

$variable: 1em
p
  font: $variable

$location: chicago
$offset: left
.#{$location}
  #{$offset}: 20px

width: 40px + 6
width: 100px / 10
width: percentage(2.5)
width: round(2.5px)
width: ceil(2.5px)
width: floor(2.5px)
width: abs(-2.5px)

.tag1
  border-radius: 10px
.tag2
  @extend .tag1
  background: #f2dede

$variable: true
.tag
  @if $variable == true
    background: #ff7b29
  @else if $variable == false
    background: #0087cc
  @else
    background: #333

@for $col from 1 to 6
  .col-#{$col}
    width: 40px * $col

@each $class in uxd, rails, html, css
  .#{$class}-logo
    background: url("/img/#{$class}.jpg")

$heading: 1
@while $heading <= 6
  h#{$heading}
    font-size: 2em - ($heading * .25em)
  $heading: $heading + 1

/*MORE STUFF
<div id="alert" style={{width: '160px !important', position: 'absolute', right: '1px', top: '55px'}}>
  <div className={this.props.metadata.type + ' alert-dismissible animated bounceInRight'} role="alert">
    <button type="button" className="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <p>{this.props.metadata.text}</p>
  </div>
</div>


.animated {
  animation-duration: 1s;
}

.bounceInRight {
  -webkit-animation-name: bounceInRight;
  animation-name: bounceInRight;
}

@-webkit-keyframes bounceInRight {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(110%, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0);
  }

  75% {
    transform: translate3d(10px, 0, 0);
  }

  90% {
    transform: translate3d(-5px, 0, 0);
  }

  to {
    transform: none;
  }
}

@-webkit-keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(-3000px, 0, 0);
    transform: translate3d(-3000px, 0, 0);
  }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(25px, 0, 0);
    transform: translate3d(25px, 0, 0);
  }

  75% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  90% {
    -webkit-transform: translate3d(5px, 0, 0);
    transform: translate3d(5px, 0, 0);
  }

  to {
    -webkit-transform: none;
    transform: none;
  }
}

@keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    -webkit-animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(-3000px, 0, 0);
    transform: translate3d(-3000px, 0, 0);
  }

  60% {
    opacity: 1;
    -webkit-transform: translate3d(25px, 0, 0);
    transform: translate3d(25px, 0, 0);
  }

  75% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  90% {
    -webkit-transform: translate3d(5px, 0, 0);
    transform: translate3d(5px, 0, 0);
  }

  to {
    -webkit-transform: none;
    transform: none;
  }
}

.bounceInLeft {
  -webkit-animation-name: bounceInLeft;
  animation-name: bounceInLeft;
}
*/
